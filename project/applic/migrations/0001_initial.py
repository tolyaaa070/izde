# Generated by Django 5.2.1 on 2025-06-02 02:26

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Houses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('buy', 'buy'), ('rent', 'rent')], max_length=10)),
                ('name_houses', models.CharField(max_length=70)),
                ('name_houses_ru', models.CharField(max_length=70, null=True)),
                ('name_houses_en', models.CharField(max_length=70, null=True)),
                ('series', models.CharField(choices=[('individual', 'individual'), ('elite', 'elite'), ('104', '104'), ('105', '105'), ('106', '106')], max_length=10)),
                ('rooms', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6+', '6+')], max_length=7)),
                ('bathroom', models.CharField(choices=[('combined', 'combined'), ('separate', 'separate')], max_length=15)),
                ('bathroom_icon', models.FileField(upload_to='bathroom_icon/')),
                ('parking', models.CharField(choices=[('ground', 'ground'), ('underground', 'underground'), ('no parking', 'no parking')], max_length=20)),
                ('parking_icon', models.FileField(upload_to='parking_icon/')),
                ('locations', models.CharField(max_length=35)),
                ('locations_ru', models.CharField(max_length=35, null=True)),
                ('locations_en', models.CharField(max_length=35, null=True)),
                ('square', models.IntegerField()),
                ('price', models.PositiveIntegerField()),
                ('about_property', models.TextField(max_length=100)),
                ('min_stay', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Минимальный срок аренды (в месяцах)')),
                ('deposit', models.PositiveIntegerField(blank=True, null=True)),
                ('floor', models.PositiveIntegerField()),
                ('total_floors', models.PositiveIntegerField()),
                ('floor_icon', models.FileField(upload_to='floor_icon/')),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('userprofile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('position', models.CharField(default='agent', max_length=60)),
                ('position_ru', models.CharField(default='agent', max_length=60, null=True)),
                ('position_en', models.CharField(default='agent', max_length=60, null=True)),
                ('image', models.ImageField(upload_to='agent_image/')),
                ('language', multiselectfield.db.fields.MultiSelectField(choices=[('english', 'english'), ('russian', 'russian'), ('kyrgyz', 'kyrgyz'), ('china', 'china'), ('french', 'french')], max_length=35)),
                ('company', models.ImageField(upload_to='company_image/')),
                ('areas', models.CharField(max_length=70, verbose_name='где в основном')),
                ('areas_ru', models.CharField(max_length=70, null=True, verbose_name='где в основном')),
                ('areas_en', models.CharField(max_length=70, null=True, verbose_name='где в основном')),
                ('active_listing', models.IntegerField()),
                ('experience', models.DateField()),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('applic.userprofile',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HousePhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='houses_image/')),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applic.houses')),
            ],
        ),
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amenities', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Balkony', 'Balkony'), ('Microwave', 'Microwave'), ('WiFi', 'WiFi'), ('Coverad parking', 'Coverad parking'), ('TV', 'TV'), ('Central heating', 'Central heating'), ('Washing machine', 'Washing machine'), ('Air-conditioner', 'Air-conditioner'), ('Tableware', 'Tableware'), ('Swimming pool', 'Swimming pool'), ('Gym', 'Gym')], max_length=117, null=True)),
                ('amenities_icon', models.FileField(upload_to='amenities_icon/')),
                ('amenity_houses', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applic.houses', verbose_name='amenity')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')])),
                ('comment', models.TextField(blank=True, null=True)),
                ('houses', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applic.houses', verbose_name='rating')),
            ],
        ),
        migrations.CreateModel(
            name='Main',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('houses', models.ManyToManyField(to='applic.houses')),
                ('agents', models.ManyToManyField(to='applic.agent')),
            ],
        ),
        migrations.AddField(
            model_name='houses',
            name='agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applic.agent', verbose_name='agent'),
        ),
    ]
